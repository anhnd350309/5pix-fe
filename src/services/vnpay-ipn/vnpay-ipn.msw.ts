/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * 5PIX BACKEND
 * 
        Base frame with FastAPI micro framework + Postgresql
            - Login/Register with JWT
            - Permission
            - CRUD User
            - Unit testing with Pytest
            - Dockerize
        
 * OpenAPI spec version: 0.1.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  VnpayDto
} from '../../schemas'

export const getGetPaymentVnpayGetPaymentGetResponseMock = (overrideResponse: Partial< VnpayDto > = {}): VnpayDto => ({Message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), RspCode: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse})

export const getCheckQueryParamsVnpayCheckGetResponseMock = (overrideResponse: Partial< VnpayDto > = {}): VnpayDto => ({Message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), RspCode: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse})

export const getProcessPaymentVnpayIPNGetResponseMock = (overrideResponse: Partial< VnpayDto > = {}): VnpayDto => ({Message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), RspCode: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse})


export const getGetPaymentVnpayGetPaymentGetMockHandler = (overrideResponse?: VnpayDto | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<VnpayDto> | VnpayDto)) => {
  return http.get('*/vnpay/get-payment', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getGetPaymentVnpayGetPaymentGetResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getCheckQueryParamsVnpayCheckGetMockHandler = (overrideResponse?: VnpayDto | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<VnpayDto> | VnpayDto)) => {
  return http.get('*/vnpay/check', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getCheckQueryParamsVnpayCheckGetResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}

export const getProcessPaymentVnpayIPNGetMockHandler = (overrideResponse?: VnpayDto | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<VnpayDto> | VnpayDto)) => {
  return http.get('*/vnpay/IPN', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getProcessPaymentVnpayIPNGetResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getVnpayIpnMock = () => [
  getGetPaymentVnpayGetPaymentGetMockHandler(),
  getCheckQueryParamsVnpayCheckGetMockHandler(),
  getProcessPaymentVnpayIPNGetMockHandler()
]
