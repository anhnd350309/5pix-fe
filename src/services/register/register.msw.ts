/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * 5PIX BACKEND
 * 
        Base frame with FastAPI micro framework + Postgresql
            - Login/Register with JWT
            - Permission
            - CRUD User
            - Unit testing with Pytest
            - Dockerize
        
 * OpenAPI spec version: 0.1.0
 */
import {
  faker
} from '@faker-js/faker'
import {
  HttpResponse,
  delay,
  http
} from 'msw'
import type {
  DataResponseUserItemResponse
} from '../../schemas'

export const getRegisterRegisterPostResponseMock = (overrideResponse: Partial< DataResponseUserItemResponse > = {}): DataResponseUserItemResponse => ({code: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), data: faker.helpers.arrayElement([{email: faker.internet.email(), full_name: faker.string.alpha(20), id: faker.number.int({min: undefined, max: undefined}), is_active: faker.datatype.boolean(), last_login: faker.helpers.arrayElement([`${faker.date.past().toISOString().split('.')[0]}Z`, undefined]), role: faker.string.alpha(20)}, undefined]), message: faker.helpers.arrayElement([faker.string.alpha(20), undefined]), ...overrideResponse})


export const getRegisterRegisterPostMockHandler = (overrideResponse?: DataResponseUserItemResponse | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<DataResponseUserItemResponse> | DataResponseUserItemResponse)) => {
  return http.post('*/register', async (info) => {await delay(1000);
  
    return new HttpResponse(JSON.stringify(overrideResponse !== undefined 
            ? (typeof overrideResponse === "function" ? await overrideResponse(info) : overrideResponse) 
            : getRegisterRegisterPostResponseMock()),
      { status: 200,
        headers: { 'Content-Type': 'application/json' }
      })
  })
}
export const getRegisterMock = () => [
  getRegisterRegisterPostMockHandler()
]
